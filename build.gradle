buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.7.RELEASE")
    }
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'scala'

description = "Demonstration of integration tests using ScalaTest for spring boot"

mainClassName = 'hello.Application'

repositories {
    mavenCentral()
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

sourceSets {
    integration {
        compileClasspath += sourceSets.main.output + configurations.testCompile
        runtimeClasspath += output + compileClasspath + configurations.testRuntime
    }
}

idea {
    module {
        testSourceDirs += sourceSets.integration.java.srcDirs
        testSourceDirs += sourceSets.integration.scala.srcDirs
        testResourceDirs += sourceSets.integration.resources.srcDirs
        scopes.TEST.plus += [configurations.integrationCompile]
    }
}


task scalaTest(dependsOn: ['integrationClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/scala/integration', '-o']
    classpath = sourceSets.integration.runtimeClasspath
}

dependencies {
    // project
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.scala-lang:scala-library:2.13.1' // haque for intellij
    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //
    // integration
    integrationImplementation 'org.springframework.boot:spring-boot-starter-test'
    integrationImplementation group: 'org.scala-lang', name: 'scala-library', version: '2.13.1'
    integrationImplementation group: 'org.scala-lang.modules', name: 'scala-xml_2.13', version: '1.2.0'
    integrationImplementation group: 'org.scalatest', name: 'scalatest_2.13', version: '3.0.8'
}

